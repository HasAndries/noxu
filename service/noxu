#!/bin/bash

NODE_ENV="development"
NODE_APP='network.js'
APP_DIR='/var/www/noxu_network'
PID_FILE=$APP_DIR/pid/app.pid
LOG_FILE=$APP_DIR/log/app.log
CONFIG_DIR=$APP_DIR/config
NODE_EXEC=/usr/local/bin/node

### BEGIN INIT INFO
# Provides: node
# Required-Start:    $network $remote_fs $local_fs
# Required-Stop:     $network $remote_fs $local_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: start and stop noxu
# Description: Noxu service
### END INIT INFO

start_app (){
    if [ -f $PID_FILE ]
    then
        echo "$PID_FILE exists, process is already running or crashed"
    else
        echo "Starting Noxu..."
        NODE_ENV=$NODE_ENV NODE_CONFIG_DIR=$CONFIG_DIR $NODE_EXEC $APP_DIR/$NODE_APP  1>$LOG_FILE 2>&1 &
        echo $! > $PID_FILE;
    fi
}

stop_app (){
    if [ ! -f $PID_FILE ]
    then
        echo "$PID_FILE does not exist, process is not running"
    else
        echo "Stopping $APP_DIR/$NODE_APP ..."
        echo "Killing `cat $PID_FILE`"
        kill `cat $PID_FILE`;
        rm -f $PID_FILE;
        echo "Noxu stopped"
    fi
}

case "$1" in
    start)
        start_app
    ;;
    stop)
        stop_app
    ;;
    restart)
        stop_app
        start_app
    ;;
    status)
        if [ -f $PID_FILE ]
        then
            PID=`cat $PID_FILE`
            if [ -z "`ps -ef | grep $PID | grep -v grep`" ]
            then
                echo "Noxu stopped but pid file exists"
            else
                echo "Noxu running with pid $PID"

            fi
        else
            echo "Noxu stopped"
        fi
    ;;
    *)
        echo "Usage: /etc/init.d/noxu {start|stop|restart|status}"
    ;;
esac